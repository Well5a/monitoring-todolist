apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    service: todo
  name: todo-app
  namespace: todo-application
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        service: todo
      annotations:
        prometheus.io/path: '/actuator/prometheus'
        #prometheus.io/port: '5555'
        prometheus.io/scrape: 'true'
    spec:
      containers:
      - command:
        - sh
        - -c
        - java -javaagent:/agent/inspectit-ocelot-agent.jar -jar /app.jar
        env:
        - name: INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT
          value: "8888"
        - name: INSPECTIT_SELF_MONITORING_ENABLED
          value: "true"
        - name: INSPECTIT_SERVICE_NAME
          value: todo-app
        - name: SPRING_DATASOURCE_URL
          value: jdbc:postgresql://${todo-service.service.host}:5432/tododb
        - name: SPRING_DATASOURCE_PASSWORD
          value: todo
        - name: SPRING_DATASOURCE_USERNAME
          value: todo
        image: todolist
        name: todo-app
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5555
        - containerPort: 8888
        resources: {}
        volumeMounts:
          - name: todo-agent-volume
            mountPath: /agent
      restartPolicy: Always
      volumes:
        - name: todo-agent-volume
          persistentVolumeClaim:
            claimName: todo-agent-claim
status: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    service: todo
  name: todo-db
  namespace: todo-application
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        service: todo
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              value: tododb
            - name: POSTGRES_PASSWORD
              value: todo
            - name: POSTGRES_USER
              value: todo
          image: postgres
          name: todo-db
          ports:
            - containerPort: 5432
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    service: todo
  name: todo-db-exporter
  namespace: todo-application
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        service: todo
    spec:
      containers:
        - env:
            - name: DATA_SOURCE_NAME
              value: postgresql://todo:todo@${todo-service.service.host}:5432/tododb?sslmode=disable
            - name: PG_EXPORTER_DISABLE_DEFAULT_METRICS
              value: "false"
            - name: PG_EXPORTER_EXTEND_QUERY_PATH
              value: /etc/config/queries.yml
          image: wrouesnel/postgres_exporter:latest
          name: todo-db-exporter
          ports:
            - containerPort: 9187
          resources: {}
          volumeMounts:
            - name: todo-db-exporter-volume
              mountPath: /etc/config/queries.yml
      restartPolicy: Always
      volumes:
        - name: todo-db-exporter-volume
          hostPath:
            path: /home/monitor/ownCloud/MonitoringCloud/monitoring-todolist/config/queries.yml
            type: File
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: todo-service
  namespace: todo-application
spec:
  type: NodePort
  ports:
    - name: "application"
      port: 5555
      targetPort: 5555
      nodePort: 31555
    - name: "inspectit"
      port: 8888
      targetPort: 8888
      nodePort: 31888
    - name: "database"
      port: 5432
      targetPort: 5432
      nodePort: 31432
    - name: "database-exporter"
      port: 9187
      targetPort: 9187
      nodePort: 31187
  selector:
    service: todo
status:
  loadBalancer: {}
---
#apiVersion: extensions/v1beta1
#kind: Ingress
#metadata:
#  name: todo-ingress
#  namespace: todo-application
#  annotations:
#    nginx.ingress.kubernetes.io/rewrite-target: /
#spec:
#  rules:
#    - host: todo.list
#      http:
#        paths:
#          - path: /
#            backend:
#              serviceName: todo-service
#              servicePort: 5555
#          - path: /metrics
#            backend:
#              serviceName: todo-service
#              servicePort: 8888
