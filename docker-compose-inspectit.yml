version: '3'
services:
  agent:
    image: inspectit/inspectit-oce-agent:latest
    container_name: todo-agent
    mem_limit: 512M
    volumes:
      - agent-vol:/agent


  database:
    image: postgres
    container_name: todo-db
    environment:
      POSTGRES_USER: todo
      POSTGRES_PASSWORD: todo
      POSTGRES_DB: tododb
    ports:
      - 5432:5432
    networks:
      monitoring:
          aliases:
            - todo-db

  database-exporter:
    image: wrouesnel/postgres_exporter:latest
    container_name: todo-db-exporter
    depends_on:
      - database
    volumes:
      - ./config/queries.yaml:/etc/config/queries.yaml
    environment:
      DATA_SOURCE_NAME: postgresql://todo:todo@todo-db:5432/tododb?sslmode=disable #<username>:<password>@<server>:<port>/<database>
      PG_EXPORTER_EXTEND_QUERY_PATH: /etc/config/queries.yaml
      PG_EXPORTER_DISABLE_DEFAULT_METRICS: "false"
    ports:
      - 9187:9187
    networks:
      monitoring:
        aliases:
          - todo-db-exporter

  webserver:
    image: todolist
    container_name: todo-app
    depends_on:
      - database
    environment:
      INSPECTIT_SERVICE_NAME: customers-service
      INSPECTIT_CONFIG_FILE_BASED_PATH: /agentconfig
      INSPECTIT_EXPORTERS_METRICS_PROMETHEUS_PORT: 9091
      SPRING_DATASOURCE_URL: jdbc:postgresql://todo-db:5432/tododb
      SPRING_DATASOURCE_USERNAME: todo
      SPRING_DATASOURCE_PASSWORD: todo
    entrypoint: ["sh", "-c","
          ./dockerize
          java
          -javaagent:/agent/inspectit-oce-agent.jar
          -jar /app.jar"]
    ports:
      - 9091:9091
      - 5555:5555
    networks:
      monitoring:
        aliases:
          - todo-app

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    ports:
      - 9090:9090
    networks:
      monitoring:
        aliases:
          - prometheus

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./grafana/provisioning:/usr/share/grafana/custom/
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=todo
      - GF_PATHS_PROVISIONING=/usr/share/grafana/custom/
    ports:
      - 3000:3000
    networks:
      monitoring:
        aliases:
          - grafana

networks:
  monitoring: